import adventofcodeLibrary

func CalculateFuelConsumption() -> Int {
    let masses = [
        127117, 121199, 80494, 83466, 125933, 80813,
        137787, 122687, 123256, 128013, 90525, 116909,
        95227, 86368, 96748, 131600, 101434, 98226,
        88614, 76871, 65553, 141639, 55075, 133494,
        149211, 51775, 139337, 94542, 76351, 100791,
        107426, 91462, 78691, 70162, 95006, 101280,
        59398, 77396, 66276, 100207, 67200, 58985,
        64763, 125001, 149661, 129085, 114919, 77844,
        108209, 121125, 54662, 103292, 112164, 121118,
        71847, 130912, 81068, 137253, 56703, 107683,
        108181, 142507, 112673, 97242, 50195, 123852,
        130090, 144719, 133862, 73461, 81374, 56574,
        147026, 140613, 148938, 123768, 64967, 106133,
        123961, 87190, 71348, 148830, 87261, 58942,
        132417, 101993, 94510, 138358, 72539, 80356,
        74249, 103109, 135176, 128635, 116062, 82975,
        135814, 62702, 80696, 95607, 
    ] 
    return FuelCalculator().calculateCombined(masses) 
}

func CalculateIntCode() {
    var memory = [1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,19,2,6,19,23,1,23,5,27,1,27,13,31,2,6,31,35,1,5,35,39,1,39,10,43,2,6,43,47,1,47,5,51,1,51,9,55,2,55,6,59,1,59,10,63,2,63,9,67,1,67,5,71,1,71,5,75,2,75,6,79,1,5,79,83,1,10,83,87,2,13,87,91,1,10,91,95,2,13,95,99,1,99,9,103,1,5,103,107,1,107,10,111,1,111,5,115,1,115,6,119,1,119,10,123,1,123,10,127,2,127,13,131,1,13,131,135,1,135,10,139,2,139,6,143,1,143,9,147,2,147,6,151,1,5,151,155,1,9,155,159,2,159,6,163,1,163,2,167,1,10,167,0,99,2,14,0,0]

    for noun in 0...99 {
        for verb in 0...99 {
            memory[1] = noun
            memory[2] = verb

            let result = IntCode().compute(memory)!
            if result[0] == 19690720 {
                print("Noun: \(noun), Verb: \(verb) --> \(100*noun+verb)")
                return
            }
        }
    }
    print("ERROR ERROR NO SOLUTION FOUND")
}

print("We need \(CalculateFuelConsumption()) fuel")
CalculateIntCode()
